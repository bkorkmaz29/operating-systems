#!/usr/bin/bash

# Recursive mode.
RECURSIVE="false"



# Modifies filenames according to the arguments.
modify(){
    local FILENAME=$(basename "$1") 
    local PATHNAME=$(dirname "$1")

   case "$OPTION" in
        L) local NEWNAME="$(echo "$FILENAME" | tr [:upper:] [:lower:])" ;;
        U) local NEWNAME="$(echo "$FILENAME" | tr [:lower:] [:upper:])" ;;
        S) local NEWNAME="$(echo "$FILENAME" | sed -s "$sed_pattern")" ;;
    esac

    if [ "$1" != "${PATHNAME}/${NEWNAME}" ]; then
        # -- signifies the end of command options    
        mv -- "$1" "${PATHNAME}/${NEWNAME}"                                                                                              
    fi
}



# Modifies every file in the given directory and its subdirectories
modify_recursive(){
    for file in "$1"/* ; do
        if [ -f "$file" ]; then
            modify "$file" "$option" "$sed_p"
        elif [ -d "$file" ]; then
            modify_recursive "$file" "$option" "$sed_p"
        else
            break
        fi
    done
}


help(){
echo "
    -l              Lowercase filenames.
    -u              Upercase filenames.
    -h              Prints help.
    -r              Modifies filenames recursively.
    <sed pattern>   Applies sed pattern to filenames.
    
    Example calls:
    ./modify [-r] [-l|-u] <dir/file names...>
    ./modify [-r] <sed pattern> <dir/file names...>
    ./modify [-h]
    
    -r can be applied to single filename or for directory.
    -r can be used with -u, -l and sed pattern.
    -u and -l flags can not be passed together.
    "
}

# Check if parameters exist
if [ $# -eq 0 ]; then
    echo "No arguments given."
    exit
fi

# Check recursion
case "$1" in
    -r ) RECURSIVE="true" 
        shift ;;
esac


case "$1" in
    -h ) help exit ;;
    -u ) OPTION=U ;;
    -l ) OPTION=L ;;
     *) OPTION=S sed_pattern=$1 ;;

esac

# Checking if $2 is null
while [ -n "$2" ]; do           
    # Checking if path exists."./$2" for folder names starting with - 
    if ! [ -e "./$2" ]; then      
        echo "Incorrect arguments!"
        exit
    fi

    if [ $RECURSIVE = "true" ]; then
        if [ -f "./$2" ]; then
            modify "./$2" "$OPTION"
        else
            modify_recursive "./$2" "$OPTION"
        fi
    else
        if [ -f "./$2" ]; then
            modify "./$2" "$OPTION"
        fi
    fi
    shift
done
